class Solution:
    '''
    67.二进制求和
    给你两个二进制字符串 a 和 b ，以二进制字符串的形式返回它们的和。
示例 1：
输入:a = "11", b = "1"
输出："100"
示例 2：
输入：a = "1010", b = "1011"
输出："10101"

提示：
1 <= a.length, b.length <= 104
a 和 b 仅由字符 '0' 或 '1' 组成
字符串如果不是 "0" ，就不含前导零
    '''
    def addBinary(self, a: str, b: str) -> str:
        """没做出来，直接用的官方题解的方法
        该方法用于将两个二进制字符串相加。

        参数:
        a: 第一个二进制字符串。
        b: 第二个二进制字符串。

        返回值:
        两个二进制字符串相加后的结果的二进制字符串。
        """
        # 将输入的二进制字符串转换为整数
        x, y = int(a, 2), int(b, 2)

        # 循环直到进位为0
        while y:
            # 无进位相加
            answer = x ^ y
            # 计算进位
            carry = (x & y) << 1
            # 更新x和y的值为无进位相加的结果和进位值
            x, y = answer, carry

        # 将最终结果从二进制转换为字符串并返回，去掉前缀'0b'
        return bin(x)[2:]

solution = Solution()
print(solution.addBinary("11", "1"))